{"version":3,"file":"backbone-api-99xp.min.js","sources":["../src/backbone-api-99xp.js"],"sourcesContent":["// Micro Service integrator plus advanced validation, formatting and control over process.\n// Mix of [express](https://github.com/expressjs/express), \n// [validate-99xp](https://github.com/brunnofoggia/validate-99xp), \n// [backbone-request-99xp](https://github.com/brunnofoggia/backbone-request-99xp)\n\n\n// CODE DOCUMENTED BELOW\n// --------------\n\n// --------------\n\n// Baseline setup\n// --------------\nimport _ from 'underscore-99xp';\nimport v from 'validate-99xp';\nimport BackboneRequest from 'backbone-request-99xp';\n\nvar BackboneApi = {};\n\n// response object from express router\nBackboneApi._res = null;\n\n// Extended Functionallity for Models and Collections\nvar extended = {\n    // not meant to be used. will be used on setting api methods like POST or PUT\n    idAttribute: '_id',\n    auth: false,\n    tokenField: 'accessToken',\n    // list of methods available in the api and their configuration (paths, validations)\n    methods: {\n        //        auth: {\n        //            public: true,\n        //            path: '/a/b',\n        //            validations: {},\n        //            data: {\n        //                user: '',\n        //                pass: '',\n        //            },\n        ////            method: {}, if I dont set it, it will use a generic one\n        //            \n        //        },\n        //        _sample: Sample\n        //        _sample: {\n        //            path: '/a/b',\n        //            validations: {}\n        //        }\n    },\n    //  default method applying JWT Auth\n    //  might be necessary to overwrite it\n    setAuthHeader(o) {\n        if (!this.tokenField) {\n            return BackboneApi.dataError('tokenField is not set');\n        }\n        o.headers.Authorization = 'Bearer ' + this.data[this.auth][this.tokenField];\n\n        return o;\n    },\n    isAuthenticated() {\n        return !this.auth || !!this.data[this.auth];\n    },\n    // constructor\n    initialize(p, o = {}) {\n        this.setRouterParameters(o.req, o.res);\n        // set options applying default options and ignoring router parameters\n        this.options = _.defaults(_.omit(o, 'req', 'res'), {\n            autoexec: true\n        });\n        this.data = {};\n\n        // keep method as an array to have a single way on processing\n        typeof this.options.method === 'string' && (this.options.method = [this.options.method]);\n        // autoexec if isn't asked not to do it\n        this.options.autoexec && this.execAll();\n    },\n    // recursively run through methods set\n    execAll() {\n        // store a copy of methods to process them\n        !this._methodsExecution && (this._methodsExecution = _.clone(this.options.method));\n        // stop execution when all methods were processed\n        if (_.size(this._methodsExecution) === 0) {\n            this._methodsExecution = null;\n            _.bind(this.options.success, this)();\n            return;\n        }\n        // grab first method out from list\n        var method = this._methodsExecution.shift();\n        // execute it\n        this.exec(method, () => this.execAll(), this.options.error);\n    },\n    // execute one method\n    exec(method, success, error) {\n        var methodData = this.methodData(method);\n\n        // validate input\n        var vErr = this.validate(this.getMethodInput(methodData), {\n            methodData: methodData\n        });\n        // dispach validation errors\n        if (vErr !== null) {\n            return this.validationErrors(vErr);\n        }\n\n        // set execution as callback to pass through authentication if needed\n        var fn = _.bind(this.callApi, this),\n            calledFn = _.partial(fn, method, methodData, success, error);\n        // if authorization is not needed, or is authenticated already, execute method\n        if (methodData.public || this.isAuthenticated()) {\n            return calledFn();\n        }\n        // if method is not public and there's no authentication set output an error\n        else if (!this.auth) {\n            return BackboneApi.dataError(`method \"${method}\" is not set as public but auth is not set`);\n        }\n        // execute authentication and requested method after if\n        return this.exec(this.auth, calledFn);\n    },\n    // call api and trigger callbacks accordingly to what happens\n    callApi(method, methodData, success, error) {\n        this.setApiCall(methodData);\n        // request data\n        var o = {\n            method: methodData.method, // http method\n            data: this.getMethodInput(methodData), // request body\n            headers: _.result2(methodData, 'headers', {}, [methodData], this)\n        };\n\n        // if method is private set headers\n        if (!methodData.public) {\n            o = this.setAuthHeader(o);\n        }\n\n        // before function that can be set on method config to change options or data\n        var before = _.bind(typeof methodData.before === 'function' ? methodData.before : (c, _o, _methodData) => {\n                c(_o, _methodData);\n            }, this),\n            // request function executed after before callabck\n            request = _.bind(_.partial((_method, _methodData, _success, _error, _o) => {\n                // listeners for success or error\n                this.listenToOnce(this, 'sync', _.bind(() => {\n                    this.stopListening(this);\n                    // store execution results with method name in data object\n                    this.data[_method] = this.attributes;\n                    // empty attributes for next execution\n                    this.attributes = {};\n\n                    // handle possible errors inside callbacks\n                    try {\n                        typeof _methodData.success === 'function' && _.bind(_methodData.success, this)(_o, this._req.body, _methodData);\n                        typeof _success === 'function' && _.bind(_success, this)(_o, this._req.body, _methodData);\n                    } catch (e) {\n                        /*console.error('Internal Failure 1');*/\n                        /*console.error(e);*/\n                        this._res.status(500).send({\n                            message: 'Internal Failure (1)'\n                        });\n                    }\n                }, this));\n                this.listenToOnce(this, 'error', _.bind((model, data) => {\n                    this.stopListening(this);\n                    /*!this._reqErr.response && console.error('Internal Failure 2');*/\n\n                    // handle possible errors inside callbacks\n                    try {\n                        /*console.error('Internal Failure 2a');*/\n                        typeof _methodData.error === 'function' && _.bind(_methodData.error, this)(data, _o, this._req.body, _methodData);\n                        typeof _error === 'function' ? _.bind(_error, this)(data, _o, this._req.body, _methodData) : !this._res._headerSent && this._res.status(data.response.statusCode ? data.response.statusCode : 500).send(data.error);\n                    } catch (e) {\n                        /*console.error('Internal Failure 3');*/\n                        /*console.error(e);*/\n                        this._res.status(500).send({\n                            message: 'Internal Failure (2)'\n                        });\n                    }\n                }, this));\n\n                // execute http request\n                this.save(null, _o);\n            }, method, methodData, success, error), this);\n\n        // handle possible errors inside before function\n        try {\n            before(request, o, methodData);\n        } catch (e) {\n            /*console.error('Internal Failure 4');*/\n            /*console.log(e);*/\n            this._res.status(500).send({\n                message: 'Internal Failure (4)'\n            });\n        }\n    },\n    // getter for methods data. ensure data for method asked is set\n    methodData(method) {\n        if (!method || !_.result(this, 'methods')[method]) {\n            return BackboneApi.dataError('Make sure you\\'ve set your method and it\\'s data');\n        }\n\n        var methodData = _.result(this, 'methods')[method] || {};\n        if (!methodData.path) {\n            BackboneApi.dataError('Make sure you\\'ve set a path for method ' + method + '\\'');\n        }\n\n        methodData = this.setHttpMethod(methodData);\n\n        return methodData;\n    },\n    // get HTTP method from method configuration. if needed set a default HTTP method accordingly to method data input\n    setHttpMethod(methodData) {\n        var data = this.getMethodInput(methodData);\n        methodData = _.defaults(methodData, {\n            method: (typeof data === 'object' && _.size(data) > 0 ? 'POST' : 'GET')\n        });\n        methodData.method = methodData.method.toUpperCase();\n\n        return methodData;\n    },\n    // get \"data\" from method configuration (can be an object or function) or req.body instead\n    getMethodInput(methodData) {\n        return _.result2(methodData, 'data', this._req.body || {}, [_.clone(this._req.body), methodData], this);\n    },\n    // replaces common behavior of backbone to ensure no id nonwanted will be added in Api URLs\n    url() {\n        return _.result(this, 'urlRoot') ||\n            _.result(this.collection, 'url') ||\n            BackboneApi.urlError();\n    },\n    // set asked method data for the request to be executed\n    setApiCall(methodData) {\n        this.setApiUrl(methodData.path, methodData);\n    },\n    // merge urlHost with the correct path for method asked. also render path as a template to make possible having attributes on it\n    setApiUrl(path, methodData) {\n        var host = _.result(this, 'urlHost') || BackboneApi.urlError(1),\n            data = _.extend({}, _.clone(this.data), {\n                _model: this,\n                _input: this.getMethodInput(methodData),\n                _params: this._req.params\n            }),\n            pathfix = new RegExp('((?<!\\:)\\/{1,})', 'g');\n\n        path = _.template(path)(data);\n\n        return this.urlRoot = [host, path].join('/').replace(pathfix, '/');\n    },\n    // Customization of sync to use BackboneRequest.sync\n    sync(method, model, options) {\n        method = methodMap[options.method];\n        var args = [method, model, options];\n        return BackboneRequest.sync.apply(this, args);\n    },\n    // inherit validations from method configuration\n    validations(a, o) {\n        var vl = _.result2(o.methodData, 'validations', {}, [a, o], this);\n        return vl;\n    },\n    // Skip own validations. The ones that matter are method validations\n    _validate() {\n        return true;\n    },\n    // Dispatcher of validation errors\n    validationErrors(err) {\n        this._res.status(400).send({\n            title: 'Invalid Data',\n            errors: err\n        });\n    },\n    // Store req and res objects from express router. Those are necessary to access input data and to send information to the client\n    setRouterParameters(req, res) {\n        if (!req || !res) {\n            BackboneApi.dataError('Initialize requires an object with req and res (express route variables) within');\n        }\n\n        this._req = req;\n        BackboneApi._res = this._res = res;\n    },\n};\n\n// add extension and validate to our classes\n_.map(['Model', 'Collection'], (x) => {\n    BackboneApi[x] = BackboneRequest[x].extend(_.extend(_.clone(v), extended));\n});\n\n// Throw an error when a URL is needed, and none is supplied.\nBackboneApi.urlError = function(code) {\n    if (code === 2) {\n        BackboneApi.dataError('A \"path\" property must be specified in methods list for the current method');\n    }\n    BackboneApi.dataError('A \"urlHost\" property or function must be specified');\n};\n\n// Throw an error when some DATA is needed, and none is supplied.\nBackboneApi.dataError = function(msg) {\n    console.error(msg);\n    if (BackboneApi._res) {\n        return BackboneApi._res.status(500).send(msg);\n    }\n    throw new Error(msg);\n};\n\n// Map from CRUD to HTTP for our default `Backbone.sync` implementation.\nvar methodMap = {\n    'POST': 'create',\n    'PUT': 'update',\n    'PATCH': 'patch',\n    'DELETE': 'delete',\n    'GET': 'read'\n};\n\n\nexport default BackboneApi;\n"],"names":["BackboneApi","extended","idAttribute","auth","tokenField","methods","setAuthHeader","o","this","headers","Authorization","data","dataError","isAuthenticated","initialize","p","setRouterParameters","req","res","options","_","defaults","omit","autoexec","method","execAll","_methodsExecution","clone","size","bind","success","shift","exec","error","methodData","vErr","validate","getMethodInput","validationErrors","fn","callApi","calledFn","partial","public","setApiCall","result2","before","c","_o","_methodData","request","_method","_success","_error","listenToOnce","stopListening","attributes","_req","body","e","_res","status","send","message","model","_headerSent","response","statusCode","save","result","path","setHttpMethod","toUpperCase","url","collection","urlError","setApiUrl","host","extend","_model","_input","_params","params","pathfix","RegExp","template","urlRoot","join","replace","sync","args","methodMap","BackboneRequest","apply","validations","a","_validate","err","title","errors","map","x","v","code","msg","console","Error"],"mappings":"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"}