{"version":3,"file":"backbone-api-99xp.min.js","sources":["../src/backbone-api-99xp.js"],"sourcesContent":["// Micro Service integrator plus advanced validation, formatting and control over process.\n// Mix of [express](https://github.com/expressjs/express),\n// [validate-99xp](https://github.com/brunnofoggia/validate-99xp),\n// [backbone-request-99xp](https://github.com/brunnofoggia/backbone-request-99xp)\n\n// CODE DOCUMENTED BELOW\n// --------------\n\n// --------------\n\n// Baseline setup\n// --------------\nimport _ from 'underscore-99xp';\nimport v from 'validate-99xp';\nimport BackboneRequest from 'backbone-request-99xp';\nimport ExceptionResponse from 'app-exception/src/Response';\n\nvar BackboneApi = {};\n\n// response object from express router\nBackboneApi._res = null;\n\n// Extended Functionallity for Models and Collections\nvar extended = {\n    // not meant to be used. will be used on setting api methods like POST or PUT\n    idAttribute: '_id',\n    auth: false,\n    tokenField: 'accessToken',\n    // list of methods available in the api and their configuration (paths, validations)\n    methods: {\n        //        auth: {\n        //            public: true,\n        //            path: '/a/b',\n        //            validations: {},\n        //            data: {\n        //                user: '',\n        //                pass: '',\n        //            },\n        ////            method: {}, if I dont set it, it will use a generic one\n        //\n        //        },\n        //        _sample: Sample\n        //        _sample: {\n        //            path: '/a/b',\n        //            validations: {}\n        //        }\n    },\n    //  default method applying JWT Auth\n    //  might be necessary to overwrite it\n    setAuthHeader(o) {\n        if (!this.tokenField) {\n            return BackboneApi.error('tokenField is not set');\n        } else if (!this.auth || !this.methods[this.auth]) {\n            return BackboneApi.error('auth method is not set');\n        }\n\n        o.headers.Authorization =\n            'Bearer ' + this.data[this.auth][this.tokenField];\n\n        return o;\n    },\n    isPublic(force = false) {\n        return !this.auth || force;\n    },\n    isAuthenticated() {\n        return !this.auth || !!this.data[this.auth];\n    },\n    // constructor\n    initialize(p, o = {}) {\n        this.setParameters(o);\n        // set options applying default options and ignoring router parameters\n        this.data = {};\n        this.dataSent = {};\n\n        this.options = _.defaults(_.omit(o, 'req', 'res'), {\n            autoexec: !!o.method,\n        });\n\n        // keep method as an array to have a single way on processing\n        typeof this.options.method === 'string' &&\n            (this.options.method = [this.options.method]);\n        // autoexec if isn't asked not to do it\n        this.options.autoexec && this.execAll();\n    },\n    // recursively run through methods set\n    execAll(methods, success, error) {\n        !methods && (methods = this.options.method);\n        !success && (success = this.options.success);\n        !error && (error = this.options.error);\n\n        // store a copy of methods to process them\n        !this._methodsExecution && (this._methodsExecution = _.clone(methods));\n        // stop execution when all methods were processed\n        if (_.size(this._methodsExecution) === 0) {\n            this._methodsExecution = null;\n            _.bind(success, this)();\n            return;\n        }\n        // grab first method out from list\n        var method = this._methodsExecution.shift();\n        // execute it\n        this.exec(method, () => this.execAll(methods, success, error), error);\n    },\n    // execute one method\n    exec(method, success, error) {\n        var vErr,\n            methodData = this.methodData(method);\n\n        // pre validate input\n        vErr = this.validate(this._req.body || {}, {\n            methodData: methodData,\n            validationsKey: 'inputValidations',\n        });\n        // dispach validation errors\n        if (vErr !== null) {\n            return this.validationErrors(vErr);\n        }\n\n        methodData = this.methodDataCompose(methodData);\n\n        // validate data\n        vErr = this.validate(methodData.sendData, {\n            methodData: methodData,\n        });\n        // dispach validation errors\n        if (vErr !== null) {\n            return this.validationErrors(vErr);\n        }\n\n        // set execution as callback to pass through authentication if needed\n        var fn = _.bind(this.callApi, this),\n            calledFn = _.partial(fn, method, methodData, success, error);\n        // if authorization is not needed, or is authenticated already, execute method\n        if (methodData.public || this.isAuthenticated()) {\n            return calledFn();\n        }\n        // if method is not public and there's no authentication set output an error\n        else if (!this.auth) {\n            return BackboneApi.error(\n                `method \"${method}\" is not set as public but auth is not set`,\n            );\n        }\n        // execute authentication and requested method after if\n        return this.exec(this.auth, calledFn, error);\n    },\n    // call api and trigger callbacks accordingly to what happens\n    callApi(method, methodData, success, error) {\n        this.setApiCall(methodData);\n        // request data\n        this.dataSent[method] = methodData.sendData;\n        var globalHeaders = _.result2(\n                this,\n                'globalHeaders',\n                {},\n                [methodData],\n                this,\n            ),\n            globalOptions = _.result2(\n                this,\n                'globalDefaultOptions',\n                {},\n                [methodData],\n                this,\n            ),\n            o = _.defaults2(\n                {\n                    method: methodData.method, // http method\n                    data: methodData.sendData, // request body\n                    headers: _.result2(\n                        methodData,\n                        'headers',\n                        globalHeaders,\n                        [methodData],\n                        this,\n                    ),\n                },\n                globalOptions,\n            );\n\n        // if method is private set headers\n        if (!this.isPublic(methodData.public)) {\n            o = this.setAuthHeader(o);\n        }\n\n        // before function that can be set on method config to change options or data\n        var beforeError = _.bind(\n                _.partial(\n                    function (o, body, methodData, e) {\n                        var d = {\n                            title: 'Internal Failure (4)',\n                            errors: e,\n                        };\n                        typeof error === 'function'\n                            ? _.bind(error, this)(d, o, body, methodData)\n                            : BackboneApi.error(e, 0, 500);\n                    },\n                    o,\n                    this._req.body,\n                    methodData,\n                ),\n                this,\n            ),\n            before = _.bind(\n                typeof methodData.before === 'function'\n                    ? methodData.before\n                    : (c, _o, _methodData) => {\n                          c(_o, _methodData);\n                      },\n                this,\n            ),\n            // request function executed after before callabck\n            request = _.bind(\n                _.partial(\n                    (_method, _methodData, _success, _error, _o) => {\n                        // listeners for success or error\n                        this.once(\n                            [\n                                'sync',\n                                _.bind(() => {\n                                    // store execution results with method name in data object\n                                    this.data[_method] = this.attributes;\n                                    // empty attributes for next execution\n                                    this.attributes = {};\n\n                                    // handle possible errors inside callbacks\n                                    try {\n                                        typeof _methodData.success ===\n                                            'function' &&\n                                            _.bind(_methodData.success, this)(\n                                                _o,\n                                                this._req.body,\n                                                _methodData,\n                                            );\n                                        typeof _success === 'function' &&\n                                            _.bind(_success, this)(\n                                                _o,\n                                                this._req.body,\n                                                _methodData,\n                                            );\n                                    } catch (e) {\n                                        var data = {\n                                            error: 'Internal Failure (1)',\n                                        };\n                                        typeof _error === 'function'\n                                            ? _error(data)\n                                            : BackboneApi.error(data);\n                                    }\n                                }, this),\n                            ],\n                            [\n                                'error',\n                                _.bind((model, data) => {\n                                    // handle possible errors inside callbacks\n                                    try {\n                                        /*console.error('Internal Failure 2a');*/\n                                        typeof _methodData.error ===\n                                            'function' &&\n                                            _.bind(_methodData.error, this)(\n                                                data,\n                                                _o,\n                                                this._req.body,\n                                                _methodData,\n                                            );\n                                        typeof _error === 'function'\n                                            ? _.bind(_error, this)(\n                                                  data,\n                                                  _o,\n                                                  this._req.body,\n                                                  _methodData,\n                                              )\n                                            : BackboneApi.error(\n                                                  data?.error,\n                                                  0,\n                                                  data?.response?.statusCode ||\n                                                      500,\n                                              );\n                                    } catch (e) {\n                                        /*console.error('Internal Failure 3');*/\n                                        /*console.error(e);*/\n                                        BackboneApi.error(\n                                            {\n                                                title: 'Internal Server Error',\n                                                errors: e,\n                                            },\n                                            3,\n                                        );\n                                    }\n                                }, this),\n                            ],\n                        );\n\n                        // execute http request\n                        this.save(null, _o);\n                    },\n                    method,\n                    methodData,\n                    success,\n                    error,\n                ),\n                this,\n            );\n\n        // handle possible errors inside before function\n        try {\n            var rPromise = before(request, o, methodData, error);\n            if (rPromise && rPromise instanceof Promise) {\n                rPromise\n                    .then((f) => f)\n                    .catch((e) => {\n                        beforeError(e);\n                    });\n            }\n        } catch (e) {\n            var data = {\n                title: 'Internal Failure (4)',\n                errors: e,\n            };\n\n            beforeError(e);\n        }\n    },\n    // getter for methods data. ensure data for method asked is set\n    methodData(method) {\n        if (!method || !_.result(this, 'methods')[method]) {\n            return BackboneApi.error(\n                'Make sure you have set your method and its data',\n            );\n        }\n\n        var methodData = _.result(this, 'methods')[method] || {};\n        if (!methodData.path) {\n            BackboneApi.error(\n                'Make sure you have set a path for method \"' + method + '\"',\n            );\n        }\n        methodData.name = method;\n        return methodData;\n    },\n    methodDataCompose(methodData) {\n        methodData.sendData = this.getMethodInput(methodData);\n        methodData = this.setHttpMethod(methodData);\n        return methodData;\n    },\n    // get HTTP method from method configuration. if needed set a default HTTP method accordingly to method data input\n    setHttpMethod(methodData) {\n        var data = methodData.sendData;\n        methodData = _.defaults(methodData, {\n            method:\n                typeof data === 'object' && _.size(data) > 0 ? 'POST' : 'GET',\n        });\n        methodData.method = methodData.method.toUpperCase();\n\n        return methodData;\n    },\n    // get \"data\" from method configuration (can be an object or function) or req.body instead\n    getMethodInput(methodData) {\n        return _.result2(\n            methodData,\n            'data',\n            this._req.body || {},\n            [_.clone(this._req.body), methodData],\n            this,\n        );\n    },\n    // replaces common behavior of backbone to ensure no id nonwanted will be added in Api URLs\n    url() {\n        return (\n            _.result(this, 'urlRoot') ||\n            _.result(this.collection, 'url') ||\n            BackboneApi.urlError()\n        );\n    },\n    // set asked method data for the request to be executed\n    setApiCall(methodData) {\n        this.setApiUrl(methodData.path, methodData);\n    },\n    // merge urlHost with the correct path for method asked. also render path as a template to make possible having attributes on it\n    setApiUrl(path, methodData) {\n        var host = _.result(this, 'urlHost') || BackboneApi.urlError(1),\n            data = _.extend({}, _.clone(this.data), {\n                _model: this,\n                _input: methodData.sendData,\n                _params: this._req.params,\n                _options: this.options,\n            }),\n            pathfix = new RegExp('((?<!:)/{1,})', 'g');\n\n        path = _.template(path)(data);\n\n        return (this.urlRoot = [host, path].join('/').replace(pathfix, '/'));\n    },\n    // Customization of sync to use BackboneRequest.sync\n    sync(method, model, options) {\n        method = methodMap[options.method];\n        var args = [method, model, options];\n        return BackboneRequest.sync.apply(this, args);\n    },\n    // Avoid response arrays from being converted to assoc objects\n    set(models, options) {\n        var isArray = _.isArray(models),\n            args = [models, options],\n            r = BackboneRequest.Model.prototype.set.apply(this, args);\n        isArray && (this.attributes = _.toArray(this.attributes));\n        return r;\n    },\n    // inherit validations from method configuration\n    validations(a, o) {\n        var vl = _.result2(\n            o.methodData,\n            o.validationsKey || 'validations',\n            {},\n            [a, o],\n            this,\n        );\n        return vl;\n    },\n    // Skip own validations. The ones that matter are method validations\n    _validate() {\n        return true;\n    },\n    // Dispatcher of validation errors\n    validationErrors(err) {\n        throw new ExceptionResponse(\n            {\n                title: 'Invalid Data',\n                errors: err,\n            },\n            0,\n            400,\n        );\n    },\n    // Store req and res objects from express router. Those are necessary to access input data and to send information to the client\n    setParameters(o) {\n        var { req, res, params, body } = o;\n        this._req = req || { params: params || {}, body: body || {} };\n        BackboneApi._res = this._res = res;\n    },\n};\n\n// add extension and validate to our classes\n_.map(['Model', 'Collection'], (x) => {\n    BackboneApi[x] = BackboneRequest[x].extend(_.extend(_.clone(v), extended));\n});\n\n// Throw an error when a URL is needed, and none is supplied.\nBackboneApi.urlError = function (code) {\n    if (code === 2) {\n        BackboneApi.error(\n            'A \"path\" property must be specified in methods list for the current method',\n        );\n    }\n    BackboneApi.error('A \"urlHost\" property or function must be specified');\n};\n\n// Throw an error when some DATA is needed, and none is supplied.\nBackboneApi.error = function (err, code = 0, status = 500) {\n    console.error(err);\n    throw new ExceptionResponse(\n        {\n            title: 'Internal Server Error',\n            errors: err,\n        },\n        code,\n        status,\n    );\n};\n\n// Map from CRUD to HTTP for our default `Backbone.sync` implementation.\nvar methodMap = {\n    POST: 'create',\n    PUT: 'update',\n    PATCH: 'patch',\n    DELETE: 'delete',\n    GET: 'read',\n};\n\nexport default BackboneApi;\n"],"names":["BackboneApi","extended","idAttribute","auth","tokenField","methods","setAuthHeader","o","this","headers","Authorization","data","error","isPublic","force","isAuthenticated","initialize","p","setParameters","dataSent","options","_","defaults","omit","autoexec","method","execAll","success","_methodsExecution","clone","size","bind","shift","exec","vErr","methodData","validate","_req","body","validationsKey","validationErrors","methodDataCompose","sendData","fn","callApi","calledFn","partial","public","setApiCall","globalHeaders","result2","globalOptions","defaults2","beforeError","e","d","title","errors","before","c","_o","_methodData","request","_method","_success","_error","once","attributes","model","response","statusCode","save","rPromise","Promise","then","f","catch","result","path","name","getMethodInput","setHttpMethod","toUpperCase","url","collection","urlError","setApiUrl","host","extend","_model","_input","_params","params","_options","pathfix","RegExp","template","urlRoot","join","replace","sync","args","methodMap","BackboneRequest","apply","set","models","isArray","r","Model","prototype","toArray","validations","a","_validate","err","ExceptionResponse","req","res","_res","map","x","v","code","status","console","POST","PUT","PATCH","DELETE","GET"],"mappings":"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"}