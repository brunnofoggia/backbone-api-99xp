{"version":3,"file":"backbone-api-99xp.min.js","sources":["../src/backbone-api-99xp.js"],"sourcesContent":["// Micro Service integrator plus advanced validation, formatting and control over process.\n// Mix of [express](https://github.com/expressjs/express), \n// [validate-99xp](https://github.com/brunnofoggia/validate-99xp), \n// [backbone-request-99xp](https://github.com/brunnofoggia/backbone-request-99xp)\n\n\n// CODE DOCUMENTED BELOW\n// --------------\n\n// --------------\n\n// Baseline setup\n// --------------\nimport _ from 'underscore-99xp';\nimport v from 'validate-99xp';\nimport BackboneRequest from 'backbone-request-99xp';\nimport ExceptionResponse from 'app-exception/src/Response';\n\nvar BackboneApi = {};\n\n// response object from express router\nBackboneApi._res = null;\n\n// Extended Functionallity for Models and Collections\nvar extended = {\n    // not meant to be used. will be used on setting api methods like POST or PUT\n    idAttribute: '_id',\n    auth: false,\n    tokenField: 'accessToken',\n    // list of methods available in the api and their configuration (paths, validations)\n    methods: {\n        //        auth: {\n        //            public: true,\n        //            path: '/a/b',\n        //            validations: {},\n        //            data: {\n        //                user: '',\n        //                pass: '',\n        //            },\n        ////            method: {}, if I dont set it, it will use a generic one\n        //            \n        //        },\n        //        _sample: Sample\n        //        _sample: {\n        //            path: '/a/b',\n        //            validations: {}\n        //        }\n    },\n    //  default method applying JWT Auth\n    //  might be necessary to overwrite it\n    setAuthHeader(o) {\n        if (!this.tokenField) {\n            return BackboneApi.error('tokenField is not set');\n        } else if (!this.auth || !this.methods[this.auth]) {\n            return BackboneApi.error('auth method is not set');\n        }\n\n        o.headers.Authorization = 'Bearer ' + this.data[this.auth][this.tokenField];\n\n        return o;\n    },\n    isPublic(force = false) {\n        return !this.auth || force;\n    },\n    isAuthenticated() {\n        return !this.auth || !!this.data[this.auth];\n    },\n    // constructor\n    initialize(p, o = {}) {\n        this.setRouterParameters(o.req, o.res);\n        // set options applying default options and ignoring router parameters\n        this.data = {};\n        this.dataSent = {};\n        \n        this.options = _.defaults(_.omit(o, 'req', 'res'), {\n            autoexec: !!o.method\n        });\n\n        // keep method as an array to have a single way on processing\n        typeof this.options.method === 'string' && (this.options.method = [this.options.method]);\n        // autoexec if isn't asked not to do it\n        this.options.autoexec && this.execAll();\n    },\n    // recursively run through methods set\n    execAll() {\n        // store a copy of methods to process them\n        !this._methodsExecution && (this._methodsExecution = _.clone(this.options.method));\n        // stop execution when all methods were processed\n        if (_.size(this._methodsExecution) === 0) {\n            this._methodsExecution = null;\n            _.bind(this.options.success, this)();\n            return;\n        }\n        // grab first method out from list\n        var method = this._methodsExecution.shift();\n        // execute it\n        this.exec(method, () => this.execAll(), this.options.error);\n    },\n    // execute one method\n    exec(method, success, error) {\n        var vErr,\n            methodData = this.methodData(method);\n\n        // pre validate input\n        vErr = this.validate(this._req.body || {}, {\n            methodData: methodData,\n            validationsKey: 'inputValidations'\n        });\n        // dispach validation errors\n        if (vErr !== null) {\n            return this.validationErrors(vErr);\n        }\n\n        methodData = this.methodDataCompose(methodData);\n        \n        // validate data\n        vErr = this.validate(methodData.sendData, {\n            methodData: methodData\n        });\n        // dispach validation errors\n        if (vErr !== null) {\n            return this.validationErrors(vErr);\n        }\n\n        // set execution as callback to pass through authentication if needed\n        var fn = _.bind(this.callApi, this),\n            calledFn = _.partial(fn, method, methodData, success, error);\n        // if authorization is not needed, or is authenticated already, execute method\n        if (methodData.public || this.isAuthenticated()) {\n            return calledFn();\n        }\n        // if method is not public and there's no authentication set output an error\n        else if (!this.auth) {\n            return BackboneApi.error(`method \"${method}\" is not set as public but auth is not set`);\n        }\n        // execute authentication and requested method after if\n        return this.exec(this.auth, calledFn, error);\n    },\n    // call api and trigger callbacks accordingly to what happens\n    callApi(method, methodData, success, error) {\n        this.setApiCall(methodData);\n        // request data\n        this.dataSent[method] = methodData.sendData;\n        var globalHeaders = _.result2(this, 'globalHeaders', {}, [methodData], this),\n            globalOptions = _.result2(this, 'globalDefaultOptions', {}, [methodData], this),\n            o = _.defaults2({\n                method: methodData.method, // http method\n                data: methodData.sendData, // request body\n                headers: _.result2(methodData, 'headers', globalHeaders, [methodData], this)\n            }, globalOptions);\n\n        // if method is private set headers\n        if (!this.isPublic(methodData.public)) {\n            o = this.setAuthHeader(o);\n        }\n        \n        // before function that can be set on method config to change options or data\n        var before = _.bind(typeof methodData.before === 'function' ? methodData.before : (c, _o, _methodData) => {\n                c(_o, _methodData);\n            }, this),\n            // request function executed after before callabck\n            request = _.bind(_.partial((_method, _methodData, _success, _error, _o) => {\n                // listeners for success or error\n                this.once(['sync', _.bind(() => {\n                    // store execution results with method name in data object\n                    this.data[_method] = this.attributes;\n                    // empty attributes for next execution\n                    this.attributes = {};\n\n                    // handle possible errors inside callbacks\n                    try {\n                        typeof _methodData.success === 'function' && _.bind(_methodData.success, this)(_o, this._req.body, _methodData);\n                        typeof _success === 'function' && _.bind(_success, this)(_o, this._req.body, _methodData);\n                    } catch (e) {\n                        var data = { error: 'Internal Failure (1)' };\n                        typeof _error === 'function' ? _error(data) : (BackboneApi.error(data));\n                    }\n                }, this)], ['error', _.bind((model, data) => {\n                    // handle possible errors inside callbacks\n                    try {\n                        /*console.error('Internal Failure 2a');*/\n                        typeof _methodData.error === 'function' && _.bind(_methodData.error, this)(data, _o, this._req.body, _methodData);\n                        typeof _error === 'function' ? _.bind(_error, this)(data, _o, this._req.body, _methodData) : (BackboneApi.error(data?.error, 0, data?.response?.statusCode || 500));\n                    } catch (e) {\n                        /*console.error('Internal Failure 3');*/\n                        /*console.error(e);*/\n                        BackboneApi.error({\n                            title: 'Internal Server Error',\n                            errors: e\n                        }, 3);\n                    }\n                }, this)\n                ]);\n\n                // execute http request\n                this.save(null, _o);\n            }, method, methodData, success, error), this);\n\n        // handle possible errors inside before function\n        try {\n            before(request, o, methodData, error);\n        } catch (e) {\n            var data = {\n                title: 'Internal Failure (4)',\n                errors: e\n            };\n            typeof error === 'function' ? _.bind(error, this)(data, o, this._req.body, methodData) : (BackboneApi.error(data?.error, 0, data?.response?.statusCode || 500));\n        }\n    },\n    // getter for methods data. ensure data for method asked is set\n    methodData(method) {\n        if (!method || !_.result(this, 'methods')[method]) {\n            return BackboneApi.error('Make sure you\\'ve set your method and it\\'s data');\n        }\n\n        var methodData = _.result(this, 'methods')[method] || {};\n        if (!methodData.path) {\n            BackboneApi.error('Make sure you\\'ve set a path for method ' + method + '\\'');\n        }\n        methodData.name = method;\n        return methodData;\n    },\n    methodDataCompose(methodData) {\n        methodData.sendData = this.getMethodInput(methodData);\n        methodData = this.setHttpMethod(methodData);\n        return methodData;\n    },\n    // get HTTP method from method configuration. if needed set a default HTTP method accordingly to method data input\n    setHttpMethod(methodData) {\n        var data = methodData.sendData;\n        methodData = _.defaults(methodData, {\n            method: (typeof data === 'object' && _.size(data) > 0 ? 'POST' : 'GET')\n        });\n        methodData.method = methodData.method.toUpperCase();\n\n        return methodData;\n    },\n    // get \"data\" from method configuration (can be an object or function) or req.body instead\n    getMethodInput(methodData) {\n        return _.result2(methodData, 'data', this._req.body || {}, [_.clone(this._req.body), methodData], this);\n    },\n    // replaces common behavior of backbone to ensure no id nonwanted will be added in Api URLs\n    url() {\n        return _.result(this, 'urlRoot') ||\n            _.result(this.collection, 'url') ||\n            BackboneApi.urlError();\n    },\n    // set asked method data for the request to be executed\n    setApiCall(methodData) {\n        this.setApiUrl(methodData.path, methodData);\n    },\n    // merge urlHost with the correct path for method asked. also render path as a template to make possible having attributes on it\n    setApiUrl(path, methodData) {\n        var host = _.result(this, 'urlHost') || BackboneApi.urlError(1),\n            data = _.extend({}, _.clone(this.data), {\n                _model: this,\n                _input: methodData.sendData,\n                _params: this._req.params\n            }),\n            pathfix = new RegExp('((?<!\\:)\\/{1,})', 'g');\n\n        path = _.template(path)(data);\n\n        return this.urlRoot = [host, path].join('/').replace(pathfix, '/');\n    },\n    // Customization of sync to use BackboneRequest.sync\n    sync(method, model, options) {\n        method = methodMap[options.method];\n        var args = [method, model, options];\n        return BackboneRequest.sync.apply(this, args);\n    },\n    // inherit validations from method configuration\n    validations(a, o) {\n        var vl = _.result2(o.methodData, o.validationsKey || 'validations', {}, [a, o], this);\n        return vl;\n    },\n    // Skip own validations. The ones that matter are method validations\n    _validate() {\n        return true;\n    },\n    // Dispatcher of validation errors\n    validationErrors(err) {\n        throw new ExceptionResponse({\n            title: 'Invalid Data',\n            errors: err\n        }, 0, 400);\n    },\n    // Store req and res objects from express router. Those are necessary to access input data and to send information to the client\n    setRouterParameters(req, res) {\n        if (!req || !res) {\n            BackboneApi.error('Initialize requires an object with req and res (express route variables) within');\n        }\n\n        this._req = req;\n        BackboneApi._res = this._res = res;\n    },\n};\n\n// add extension and validate to our classes\n_.map(['Model', 'Collection'], (x) => {\n    BackboneApi[x] = BackboneRequest[x].extend(_.extend(_.clone(v), extended));\n});\n\n// Throw an error when a URL is needed, and none is supplied.\nBackboneApi.urlError = function(code) {\n    if (code === 2) {\n        BackboneApi.error('A \"path\" property must be specified in methods list for the current method');\n    }\n    BackboneApi.error('A \"urlHost\" property or function must be specified');\n};\n\n// Throw an error when some DATA is needed, and none is supplied.\nBackboneApi.error = function(err, code = 0, status = 500) {\n    throw new ExceptionResponse({\n        title: 'Internal Server Error',\n        errors: err\n    }, code, status);\n};\n\n// Map from CRUD to HTTP for our default `Backbone.sync` implementation.\nvar methodMap = {\n    'POST': 'create',\n    'PUT': 'update',\n    'PATCH': 'patch',\n    'DELETE': 'delete',\n    'GET': 'read'\n};\n\n\nexport default BackboneApi;\n"],"names":["BackboneApi","extended","idAttribute","auth","tokenField","methods","setAuthHeader","o","this","headers","Authorization","data","error","isPublic","force","isAuthenticated","initialize","p","setRouterParameters","req","res","dataSent","options","_","defaults","omit","autoexec","method","execAll","_methodsExecution","clone","size","bind","success","shift","exec","vErr","methodData","validate","_req","body","validationsKey","validationErrors","methodDataCompose","sendData","fn","callApi","calledFn","partial","public","setApiCall","globalHeaders","result2","globalOptions","defaults2","before","c","_o","_methodData","request","_method","_success","_error","once","attributes","e","model","response","statusCode","title","errors","save","result","path","name","getMethodInput","setHttpMethod","toUpperCase","url","collection","urlError","setApiUrl","host","extend","_model","_input","_params","params","pathfix","RegExp","template","urlRoot","join","replace","sync","args","methodMap","BackboneRequest","apply","validations","a","_validate","err","ExceptionResponse","_res","map","x","v","code","status"],"mappings":"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"}